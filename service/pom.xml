<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ch.uzh.ifi.seal.soprafs14</groupId>
  <artifactId>group-00-service</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Sonar -->
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<!-- The destination file for the code coverage report has to be set to 
			the same value in the parent pom and in each module pom. Then JaCoCo will 
			add up information in the same report, so that, it will give the cross-module 
			code coverage. -->
		<sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.itReportPath>
		<sonar.language>java</sonar.language>
	</properties>
  
	<repositories>
	    <repository>
	        <id>spring-snapshots</id>
	        <name>Spring Snapshots</name>
	        <url>http://repo.spring.io/snapshot</url>
	        <snapshots>
	            <enabled>true</enabled>
	        </snapshots>
	    </repository>
	</repositories>  
  
  <dependencies>
  
  	<!-- MVC/REST -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>4.0.0.RELEASE</version>
	</dependency>  
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-core</artifactId>
		<version>2.3.0</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>2.3.0</version>
	</dependency>

	<!-- Logging -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.7.1</version>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jcl-over-slf4j</artifactId>
		<version>1.7.1</version>
		<scope>runtime</scope>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>1.7.1</version>
		<scope>runtime</scope>
	</dependency>
	<dependency>
	    <groupId>log4j</groupId>
	    <artifactId>log4j</artifactId>
	    <version>1.2.17</version>
   		<scope>runtime</scope>
	</dependency>

  <!-- Database/JPA -->
    <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-jpa</artifactId>
        <version>1.4.2.RELEASE</version>
        <exclusions>
        	<exclusion>
        		<groupId>org.springframework</groupId>
        		<artifactId>spring-context</artifactId>
        	</exclusion>
        	<exclusion>
        		<groupId>org.springframework</groupId>
        		<artifactId>spring-core</artifactId>
        	</exclusion>
        	<exclusion>
        		<groupId>org.springframework</groupId>
        		<artifactId>spring-beans</artifactId>
        	</exclusion>    
        	<exclusion>
        		<groupId>org.springframework</groupId>
        		<artifactId>spring-aop</artifactId>
        	</exclusion> 
        	<exclusion>
        		<groupId>org.springframework</groupId>
        		<artifactId>spring-orm</artifactId>
        	</exclusion> 
        	<exclusion>
        		<groupId>org.springframework</groupId>
        		<artifactId>spring-tx</artifactId>
        	</exclusion> 
        </exclusions>
    </dependency>
    
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>4.0.0.RELEASE</version>
	</dependency>     
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>4.0.0.RELEASE</version>
	</dependency>   
    
    <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>eclipselink</artifactId>
        <version>2.5.1</version> 
    </dependency>
	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<version>1.3.174</version>
	</dependency>
            
    <!-- Servlet Api -->
	<dependency>
		<groupId>org.apache.tomcat</groupId>
		<artifactId>tomcat-servlet-api</artifactId>
		<version>7.0.47</version>
	</dependency>
	
	<!-- Testing -->
	<dependency>
	    <groupId>org.hamcrest</groupId>
	    <artifactId>hamcrest-all</artifactId>
	    <version>1.3</version>
	    <scope>test</scope>
	</dependency>
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.11</version>
	    <scope>test</scope>
	    <exclusions>
	        <exclusion>
	            <artifactId>hamcrest-core</artifactId>
	            <groupId>org.hamcrest</groupId>
	        </exclusion>
	    </exclusions>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-test</artifactId>
	    <version>4.0.0.RELEASE</version>
	    <scope>test</scope>
	</dependency>

  </dependencies>
  
  <build>
	  <plugins>
	    <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-compiler-plugin</artifactId>
	      <version>3.1</version>
	      <configuration>
	        <source>1.7</source>
	        <target>1.7</target>
	      </configuration>
	    </plugin>
	    
		<plugin>
		  <groupId>org.jacoco</groupId>
		  <artifactId>jacoco-maven-plugin</artifactId>
		  <executions>
		    <execution>
		      <id>pre-test</id>
		      <goals>
		        <goal>prepare-agent</goal>
		      </goals>
		    </execution>
		    <execution>
		      <id>post-test</id>
		      <phase>test</phase>
		      <goals>
		        <goal>report</goal>
		      </goals>
		    </execution>
		  </executions>
		</plugin>
		
		<plugin>
		  <artifactId>maven-failsafe-plugin</artifactId>
		  <version>2.6</version>
		  <executions>
		    <execution>
		      <goals>
		        <goal>integration-test</goal>
		        <goal>verify</goal>
		      </goals>
		    </execution>
		  </executions>
		</plugin>	    
	    
		<plugin>
		  <groupId>org.eclipse.jetty</groupId>
		  <artifactId>jetty-maven-plugin</artifactId>
		  <version>9.0.7.v20131107</version>
		  <configuration>
		    <jettyXml>src/test/resources/jetty.xml</jettyXml>
		    <scanIntervalSeconds>10</scanIntervalSeconds>
		    <stopKey>STOP</stopKey>
		    <stopPort>26012</stopPort>
		  </configuration>
		  <executions>
		    <execution>
		      <id>start-jetty</id>
		      <phase>pre-integration-test</phase>
		      <goals>
		        <goal>start</goal>
		      </goals>
		      <configuration>
		        <scanIntervalSeconds>0</scanIntervalSeconds>
		        <daemon>true</daemon>
		      </configuration>
		    </execution>
		    <execution>
		      <id>stop-jetty</id>
		      <phase>post-integration-test</phase>
		       <goals>
		         <goal>stop</goal>
		       </goals>
		     </execution>
		  </executions>
		</plugin>
	  </plugins>
	  <pluginManagement>
	  	<plugins>
	  		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
	  		<plugin>
	  			<groupId>org.eclipse.m2e</groupId>
	  			<artifactId>lifecycle-mapping</artifactId>
	  			<version>1.0.0</version>
	  			<configuration>
	  				<lifecycleMappingMetadata>
	  					<pluginExecutions>
	  						<pluginExecution>
	  							<pluginExecutionFilter>
	  								<groupId>org.jacoco</groupId>
	  								<artifactId>
	  									jacoco-maven-plugin
	  								</artifactId>
	  								<versionRange>
	  									[0.6.5.201403032054,)
	  								</versionRange>
	  								<goals>
	  									<goal>prepare-agent</goal>
	  								</goals>
	  							</pluginExecutionFilter>
	  							<action>
	  								<ignore></ignore>
	  							</action>
	  						</pluginExecution>
	  					</pluginExecutions>
	  				</lifecycleMappingMetadata>
	  			</configuration>
	  		</plugin>
	  	</plugins>
	  </pluginManagement>
  </build>
</project>